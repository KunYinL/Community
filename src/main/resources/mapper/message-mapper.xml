<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.tassel.mapper.MessageMapper">
    <sql id="selectFields">
        `id`, `from_id`, `to_id`, `conversation_id`, `content`, `status`, `create_time`
    </sql>
    <sql id="insertFields">
       `from_id`, `to_id`, `conversation_id`, `content`, `status`, `create_time`
    </sql>

    <select id="selectConversations" resultType="com.tassel.entity.Message">
        select
        <include refid="selectFields"/>
        from community.message
        where id in (
        SELECT max( id )
        FROM community.message
        WHERE status != 2
        AND from_id != 1
        AND (from_id = #{userId} or to_id = #{userId})
        GROUP BY conversation_id
        )
        order by id desc
        limit #{offset}, #{limit}
    </select>

    <select id="selectConversationCount" resultType="java.lang.Integer">
        select count(m.maxid) from (
            SELECT max( id ) as maxid
            FROM community.message
            WHERE status != 2
            AND from_id != 1
            AND (from_id = #{userId} or to_id = #{userId})
            GROUP BY conversation_id
        ) as m
    </select>

    <select id="selectLetters" resultType="com.tassel.entity.Message">
        select
        <include refid="selectFields"/>
        from community.message
        where status != 2
        and from_id != 1
        and conversation_id = #{conversationId}
        order by id desc
        limit #{offset}, #{limit}
    </select>

    <select id="selectLetterCount" resultType="java.lang.Integer">
        select count(id)
        from community.message
        where status != 2
        and from_id != 1
        and conversation_id = #{conversationId}
    </select>

    <select id="selectLetterUnreadCount" resultType="java.lang.Integer">
        select count(id)
        from community.message
        where status = 0
        and from_id != 1
        and to_id = #{userId}
        <if test="conversationId != null">
            and conversation_id = #{conversationId}
        </if>
    </select>

    <select id="selectLatestNotice" resultType="com.tassel.entity.Message">
        select
        <include refid="selectFields"/>
        from community.message
        where id in (
        select max(id)
        from message
        where status != 2
        and from_id = 1
        and to_id = #{userId}
        and conversation_id = #{topic}
        )
    </select>

    <select id="selectNoticeCount" resultType="java.lang.Integer">
        select count(id)
        from message
        where status != 2
        and from_id = 1
        and to_id = #{userId}
        and conversation_id = #{topic}
    </select>

    <select id="selectNoticeUnreadCount" resultType="java.lang.Integer">
        select count(id)
        from message
        where status = 0
        and from_id = 1
        and to_id = #{userId}
        <if test="topic!=null">
            and conversation_id = #{topic}
        </if>
    </select>

    <insert id="insertMessage" parameterType="com.tassel.entity.Message" keyProperty="id">
        insert into community.message(<include refid="insertFields"/>)
        values(#{fromId}, #{toId}, #{conversationId}, #{content}, #{status}, #{createTime})
    </insert>

    <update id="updateStatus">
        update community.message set status = #{status}
        where id in
        <foreach collection="ids" item="id" open="(" separator="," close=")">
            #{id}
        </foreach>
    </update>

</mapper>